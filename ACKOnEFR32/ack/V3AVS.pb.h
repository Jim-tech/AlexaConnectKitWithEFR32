/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Jun 16 18:56:03 2020. */

#ifndef PB_V3AVS_PB_H_INCLUDED
#define PB_V3AVS_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _V3AVS_Namespace {
    V3AVS_Namespace_ALEXA = 0,
    V3AVS_Namespace_ACK_DOM_BINARY_FORM = 127
} V3AVS_Namespace;
#define _V3AVS_Namespace_MIN V3AVS_Namespace_ALEXA
#define _V3AVS_Namespace_MAX V3AVS_Namespace_ACK_DOM_BINARY_FORM
#define _V3AVS_Namespace_ARRAYSIZE ((V3AVS_Namespace)(V3AVS_Namespace_ACK_DOM_BINARY_FORM+1))

/* Struct definitions */
typedef struct _V3AVS {
    char dummy_field;
/* @@protoc_insertion_point(struct:V3AVS) */
} V3AVS;

typedef struct _V3AVS_AvsDirective {
    V3AVS_Namespace v3_namespace;
    int32_t correlation_id;
    pb_callback_t payload;
    uint64_t timestamp;
    uint64_t expires_at;
    uint32_t instance;
/* @@protoc_insertion_point(struct:V3AVS_AvsDirective) */
} V3AVS_AvsDirective;

typedef struct _V3AVS_AvsEvent {
    V3AVS_Namespace v3_namespace;
    int32_t correlation_id;
    pb_callback_t payload;
    uint64_t timestamp;
    uint32_t instance;
/* @@protoc_insertion_point(struct:V3AVS_AvsEvent) */
} V3AVS_AvsEvent;

/* Default values for struct fields */

/* Initializer values for message structs */
#define V3AVS_init_default                       {0}
#define V3AVS_AvsDirective_init_default          {(V3AVS_Namespace)0, 0, {{NULL}, NULL}, 0, 0, 0}
#define V3AVS_AvsEvent_init_default              {(V3AVS_Namespace)0, 0, {{NULL}, NULL}, 0, 0}
#define V3AVS_init_zero                          {0}
#define V3AVS_AvsDirective_init_zero             {(V3AVS_Namespace)0, 0, {{NULL}, NULL}, 0, 0, 0}
#define V3AVS_AvsEvent_init_zero                 {(V3AVS_Namespace)0, 0, {{NULL}, NULL}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define V3AVS_AvsDirective_v3_namespace_tag      1
#define V3AVS_AvsDirective_correlation_id_tag    2
#define V3AVS_AvsDirective_payload_tag           3
#define V3AVS_AvsDirective_timestamp_tag         4
#define V3AVS_AvsDirective_expires_at_tag        5
#define V3AVS_AvsDirective_instance_tag          6
#define V3AVS_AvsEvent_v3_namespace_tag          1
#define V3AVS_AvsEvent_correlation_id_tag        2
#define V3AVS_AvsEvent_payload_tag               3
#define V3AVS_AvsEvent_timestamp_tag             5
#define V3AVS_AvsEvent_instance_tag              6

/* Struct field encoding specification for nanopb */
extern const pb_field_t V3AVS_fields[1];
extern const pb_field_t V3AVS_AvsDirective_fields[7];
extern const pb_field_t V3AVS_AvsEvent_fields[6];

/* Maximum encoded size of messages (where known) */
#define V3AVS_size                               0
/* V3AVS_AvsDirective_size depends on runtime parameters */
/* V3AVS_AvsEvent_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3AVS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
